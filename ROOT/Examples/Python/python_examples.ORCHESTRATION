{"job":{"components":{"68296":{"id":68296,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-399,"y":279,"width":32,"height":32,"inputConnectorIDs":[68362],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68360],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Memory Usage - guppy"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68298":{"id":68298,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-368,"y":-256,"width":32,"height":32,"inputConnectorIDs":[68355],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Spin Down EC2 Instance"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3 as boto\n\nec2 = boto.client('ec2',region = 'Region')\n\nec2.stop_instances(InstanceIds=[\n    'i-034ed9405aec79eee',\n  ], Force=True)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68299":{"id":68299,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-576,"y":352,"width":32,"height":32,"inputConnectorIDs":[68357],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68353],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"LMS - Export Project & Load to S3"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"#IMPORT PYTHON MODULES\nimport requests\nimport boto3 as boto\nimport io\n\n#DECLARE VARIABLES\nec2_user = '<<EC2 instance username>>'\nec2_pass = '<<EC2 instance password>>'\napi_call = 'https://10.100.10.100/rest/v1/group/name/Matillion/project/name/Test/export'\n\n#EXPORT PROJECT\nr = requests.get(api_call, \n                 auth=(ec2_user,ec2_pass), \n                 verify=False)\nprint(r.status_code)\nprint(r.text)\n\n#CREATE JSON FILE LOCALLY & WRITE RESPONSE BODY TO IT\nfilename = 'projectexport.json'\nwith io.open('/tmp/'+filename, 'w', encoding='utf-8') as f:\n  f.write(r.text)\n\n#WRITE TO S3\ns3 = boto.client('s3')\ns3.upload_file('/tmp/'+filename, '<<S3 Bucket>>', filename)\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68300":{"id":68300,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-592,"y":-112,"width":32,"height":32,"inputConnectorIDs":[68364],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68368],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Import Job from S3"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import requests\nimport boto3 as boto\nimport csv\nimport json\nimport pandas as pd\nfrom io import StringIO\nimport io\nimport os.path\n\ns3 = boto.client('s3')\ns3_r = boto.resource('s3')\nbucket = s3_r.Bucket(s3_bucket_kg)\nec2_user = ''\nec2_pass = ''\n\n########MIGRATE_INTO CREDENTIALS#######################################\n#Download file from S3 to local directory\nfor key in bucket.objects.all():\n  if 'migrate_instance_creds' in key.key:\n    s3dir_s3file = key.key\n    s3file = s3dir_s3file\n    localdir_s3file = '/tmp/' + s3file\n    s3.download_file(s3_bucket_kg, s3dir_s3file, localdir_s3file)\n    print('File: '+s3file+ ' saved to: '+ localdir_s3file)\n\nwith open('/tmp/migrate_instance_creds.csv') as csv_file:\n  csv_reader = csv.reader(csv_file, delimiter = ',')\n  line_count = 0\n  for row in csv_reader:\n    if line_count == 0:\n      ec2_user = str(row)[2:][:-2]\n      line_count += 1\n    if line_count == 1:\n      ec2_pass = str(row)[2:][:-2]                     \n#  print('EC2 Credentials saved')\n      \n#print('EC2 User: ' + str(ec2_user))\n#print('EC2 Password: ' + str(ec2_pass))\n\n#######IMPORT########################################\n#2 steps - 1) download projectexport.json from mtln-kareyg/python-boto/ to local /tmp/ directory and 2) import from /tmp/ directory into karey_SF_migrate \n\n#IMPORT JOB FROM S3\nfor key in bucket.objects.all():\n  if 'jobexport' in key.key:\n\t#title files for boto.download_file command\n    s3dir_s3file = key.key #python-boto/projectexport.json\n    s3file = os.path.basename(s3dir_s3file) #projectexport.json\n    localdir_s3file = '/tmp/'+s3file #/tmp/projectexport.json\n    #print(s3dir_s3file, s3file, localdir_s3file) #validation\n\n\t#download file to local directory\n    s3.download_file(s3_bucket_kg, s3dir_s3file, localdir_s3file)\n    print('File: '+s3file+ ' saved to: '+ localdir_s3file) #validation\n\n#INSTANCE karey_SF_migrate IMPORT JOB    \nwith open(localdir_s3file) as project_json:\n  loaded=json.load(project_json)\n  headers = {'Content-type': 'application/json'}\n  print(loaded)\n  r = requests.post('https://34.245.96.217/rest/v1/group/name/Matillion/project/name/Migrate_Into/version/name/default/job/import?onConflict=OVERWRITE', \n                 auth=(ec2_user,ec2_pass), \n                 verify=False,\n                 json = loaded,\n                 headers=headers\n                  )\n  print(r.status_code)\n  print(r.text)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68301":{"id":68301,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-741198691,"x":-400,"y":176,"width":32,"height":32,"inputConnectorIDs":[68354],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68347,68362],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Get Table Names"}}}},"visible":true},"2":{"slot":2,"name":"Database Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Microsoft SQL Server"}}}},"visible":true},"3":{"slot":3,"name":"Connection URL","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"jdbc:jtds:sqlserver://matillion-sa.database.windows.net:1433/AdventureWorks"}}}},"visible":true},"6":{"slot":6,"name":"Username","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"sa-user"}}}},"visible":true},"7":{"slot":7,"name":"Password","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":"sqlserver_SA"}}}},"visible":true},"8":{"slot":8,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SELECT \n\"TABLE_NAME\",\n\"TABLE_CATALOG\",\n\"TABLE_SCHEMA\",\n\"TABLE_TYPE\"\nFROM INFORMATION_SCHEMA.TABLES WHERE UPPER(TABLE_SCHEMA) LIKE '%SALES%'\n"}}}},"visible":true},"9":{"slot":9,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"11":{"slot":11,"name":"Connection Options","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DATABASENAME"},"2":{"slot":2,"type":"STRING","value":"test"}}}},"visible":true},"12":{"slot":12,"name":"Concurrency","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"2"}}}},"visible":true},"13":{"slot":13,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"14":{"slot":14,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SF_table_metadata"}}}},"visible":true},"15":{"slot":15,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"16":{"slot":16,"name":"S3 Staging Area","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"mtln-kareyg"}}}},"visible":true},"17":{"slot":17,"name":"Primary Keys","elements":{},"visible":true},"20":{"slot":20,"name":"Data Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"101":{"slot":101,"name":"Basic/Advanced Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Advanced"}}}},"visible":true},"102":{"slot":102,"name":"Data Source","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"103":{"slot":103,"name":"Data Selection","elements":{},"visible":false},"104":{"slot":104,"name":"Data Source Filter","elements":{},"visible":false},"105":{"slot":105,"name":"Combine Filters","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":false},"106":{"slot":106,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":false},"1001":{"slot":1001,"name":"","elements":{},"visible":false},"1992":{"slot":1992,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1994":{"slot":1994,"name":"Stage","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"1995":{"slot":1995,"name":"Stage Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1996":{"slot":1996,"name":"Stage Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1997":{"slot":1997,"name":"New Table Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"1998":{"slot":1998,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1999":{"slot":1999,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"2000":{"slot":2000,"name":"Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Standard"}}}},"visible":true},"40000":{"slot":40000,"name":"Encryption","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"None"}}}},"visible":true},"40001":{"slot":40001,"name":"KMS Key ID","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"40501":{"slot":40501,"name":"","elements":{},"visible":false},"40502":{"slot":40502,"name":"Load Options","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"Off"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}}},"visible":true},"63320":{"slot":63320,"name":"Storage Account","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"63321":{"slot":63321,"name":"Blob Container","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"84533":{"slot":84533,"name":"Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"88340":{"slot":88340,"name":"","elements":{},"visible":false},"88341":{"slot":88341,"name":"Staging","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Existing Amazon S3 Location"}}}},"visible":true},"98776":{"slot":98776,"name":"GCS Staging Area","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68302":{"id":68302,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"ITERATE","implementationID":-424773870,"x":-48,"y":176,"width":32,"height":16,"inputConnectorIDs":[68346],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of Grid Iterator 0"}}}},"visible":true},"3":{"slot":3,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"gv_TABLE_data"}}}},"visible":true},"4":{"slot":4,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"TABLE_NAME"},"2":{"slot":2,"type":"STRING","value":"table"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"TABLE_SCHEMA"},"2":{"slot":2,"type":"STRING","value":"schema"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"TABLE_CATALOGUE"},"2":{"slot":2,"type":"STRING","value":"catalogue"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"TABLE_TYPE"},"2":{"slot":2,"type":"STRING","value":"type"}}}},"visible":true},"5":{"slot":5,"name":"Break on Failure","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"No"}}}},"visible":true},"6":{"slot":6,"name":"Concurrency","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Sequential"}}}},"visible":true},"999":{"slot":999,"name":"Record Values In Task History","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Yes"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[68377],"inputIterationConnectorIDs":[]},"68303":{"id":68303,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":1155583855,"x":-224,"y":176,"width":32,"height":32,"inputConnectorIDs":[68347],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68346],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Write Table Names to Grid Variable"}}}},"visible":true},"2":{"slot":2,"name":"Basic/Advanced","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Advanced"}}}},"visible":true},"3":{"slot":3,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"4":{"slot":4,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"6":{"slot":6,"name":"Table Columns","elements":{},"visible":false},"7":{"slot":7,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SELECT * FROM \"mtln_karey_test\""}}}},"visible":true},"8":{"slot":8,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"gv_TABLE_data"}}}},"visible":true},"9":{"slot":9,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"TABLE_NAME"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"TABLE_SCHEMA"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"TABLE_CATALOG"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"TABLE_TYPE"}}}},"visible":true},"10":{"slot":10,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":false},"11":{"slot":11,"name":"Order By","elements":{},"visible":false},"12":{"slot":12,"name":"Sort","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Ascending"}}}},"visible":false},"20":{"slot":20,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68304":{"id":68304,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-224,"y":368,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"API Calls to Grid Variable"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\nimport requests\n\nto_grid = []\n\nfor each in context.getGridVariable('cfb_years'):\n  print(''.join(each))\n\n#for each in cfb_year:\n#api_call = 'https://api.collegefootballdata.com/games?year='+ str(cfb_year) +'&seasonType=regular&team=UCF'\n#r = requests.get(api_call)\n#response = json.loads(r.text)\n#to_grid.append(response)\n#to_grid = [item for sublist in to_grid for item in sublist] # list of lists to list, to undo nested lists\n#to_grid = [[json.dumps(x)] for x in to_grid] # list to list of lists, to get back into single list of list form for grid variable\n\n    \n#context.updateGridVariable('api_response',to_grid)\n#print (context.getGridVariable('api_response'))\n\n#print(r.status_code)\n#print(r.text)\n\n#print context.getGridVariable('mygridvar')\n\nfor each in context.getGridVariable('cfb_years'):\n  each = ''.join(each)\t\t\n  api_call = 'https://api.collegefootballdata.com/games?year='+ str(each) +'&seasonType=regular&team=UCF'\n  r = requests.get(api_call)\n  response = json.loads(r.text)\n  to_grid.append(response)\n\nto_grid = [item for sublist in to_grid for item in sublist] # list of lists to list, to undo nested lists\nto_grid = [[json.dumps(x)] for x in to_grid] # list to list of lists, to get back into single list of list form for grid variable\n\t\ncontext.updateGridVariable('api_response',to_grid)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[68374]},"68305":{"id":68305,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"ITERATE","implementationID":-424773870,"x":-48,"y":368,"width":32,"height":16,"inputConnectorIDs":[68343],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Grid Iterator 0"}}}},"visible":true},"3":{"slot":3,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"api_response"}}}},"visible":true},"4":{"slot":4,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"VARIANT"},"2":{"slot":2,"type":"STRING","value":"response"}}}},"visible":true},"5":{"slot":5,"name":"Break on Failure","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"No"}}}},"visible":true},"6":{"slot":6,"name":"Concurrency","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Sequential"}}}},"visible":true},"999":{"slot":999,"name":"Record Values In Task History","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Yes"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[68376],"inputIterationConnectorIDs":[]},"68306":{"id":68306,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-768,"y":-112,"width":32,"height":32,"inputConnectorIDs":[68372],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68364],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Export Job & Load to S3"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import requests\nimport boto3 as boto\nimport csv\nimport json\nimport pandas as pd\nfrom io import StringIO\nimport io\n\ns3 = boto.client('s3')\ns3_r = boto.resource('s3')\nbucket = s3_r.Bucket(s3_bucket_kg)\nec2_user = ''\nec2_pass = ''\n\n########CREDENTIALS#######################################\n#Download files from S3 to local directory\nfor key in bucket.objects.all():\n  if 'python_instance_creds' in key.key:\n    s3dir_s3file = key.key\n    s3file = s3dir_s3file\n    localdir_s3file = '/tmp/' + s3file\n    s3.download_file(s3_bucket_kg, s3dir_s3file, localdir_s3file)\n    print('File: '+s3file+ ' saved to: '+ localdir_s3file)\n\nwith open('/tmp/python_instance_creds.csv') as csv_file:\n  csv_reader = csv.reader(csv_file, delimiter = ',')\n  line_count = 0\n  for row in csv_reader:\n    if line_count == 0:\n      ec2_user = str(row)[2:][:-2]\n      line_count += 1\n    if line_count == 1:\n      ec2_pass = str(row)[2:][:-2]                     \n#  print('EC2 Credentials saved')\n      \n#print('EC2 User: ' + str(ec2_user))\n#print('EC2 Password: ' + str(ec2_pass))\n\n#######EXPORT########################################\n#EXPORT JOB TO R\nr = requests.get('https://34.248.81.61/rest/v1/group/name/Matillion/project/name/Test/version/name/default/job/name/python_examples/export', \n                 auth=(ec2_user,ec2_pass), \n                 verify=False)\nprint('Job JSON: '+ r.text)\n\n#CREATE JSON FILE LOCALLY & UPLOAD TO S3\nfilename = 'jobexport.json'\nwith io.open('/tmp/'+filename, 'w', encoding='utf-8') as f:\n  #f.write(json.dumps(json_df, ensure_ascii=False))\n  f.write(r.text)\n  s3.upload_file('/tmp/'+filename, s3_bucket_kg, 'python-boto/'+filename)\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68307":{"id":68307,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-768,"y":416,"width":32,"height":32,"inputConnectorIDs":[68340],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68369],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"LMS - Import Job from S3"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"#IMPORT PYTHON MODULES\nimport requests\n\n#DECLARE VARIABLES\nec2_user = '<<EC2 instance username>>'\nec2_pass = '<<EC2 instance password>>'\nheaders = {'Content-type': 'application/json'}\napi_call = 'https://10.100.10.100/rest/v1/group/name/Matillion/project/name/Migrate_Into/version/name/default/job/import?onConflict=OVERWRITE'\n\n#INSTANCE karey_SF_migrate IMPORT JOB    \nwith open(localdir_s3file) as project_json:\n  loaded=json.load(project_json)\n  r = requests.post(api_call, \n                 auth=(ec2_user,ec2_pass), \n                 verify=False,\n                 json = loaded,\n                 headers=headers\n                  )\n  print(r.status_code)\n  print(r.text)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68308":{"id":68308,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-768,"y":-192,"width":32,"height":32,"inputConnectorIDs":[68348],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68373],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Export Project & Load to S3"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import requests\nimport boto3 as boto\nimport csv\nimport json\nimport pandas as pd\nfrom io import StringIO\nimport io\n\ns3 = boto.client('s3')\ns3_r = boto.resource('s3')\nbucket = s3_r.Bucket(s3_bucket_kg)\nec2_user = ''\nec2_pass = ''\n\n########CREDENTIALS#######################################\n#Download files from S3 to local directory\nfor key in bucket.objects.all():\n  if 'python_instance_creds' in key.key:\n    s3dir_s3file = key.key\n    s3file = s3dir_s3file\n    localdir_s3file = '/tmp/' + s3file\n    s3.download_file(s3_bucket_kg, s3dir_s3file, localdir_s3file)\n    print('File: '+s3file+ ' saved to: '+ localdir_s3file)\n\nwith open('/tmp/python_instance_creds.csv') as csv_file:\n  csv_reader = csv.reader(csv_file, delimiter = ',')\n  line_count = 0\n  for row in csv_reader:\n    if line_count == 0:\n      ec2_user = str(row)[2:][:-2]\n      line_count += 1\n    if line_count == 1:\n      ec2_pass = str(row)[2:][:-2]                     \n  print('EC2 Credentials saved')\n      \nprint('EC2 User: ' + str(ec2_user))\nprint('EC2 Password: ' + str(ec2_pass))\n\n#######EXPORT########################################\n#EXPORT PROJECT TO R\nr = requests.get('https://34.248.81.61/rest/v1/group/name/Matillion/project/name/Test/export', \n                 auth=(ec2_user,ec2_pass), \n                 verify=False)\n\nprint(r.text)\n\n#CREATE PANDAS DATAFRAME & CONVERT TO JSON\n#d = {r}\n#df = pd.DataFrame(data=d)\n#json_df = df.to_json()\n\n#print(json_df)\n\n#CREATE JSON FILE LOCALLY & UPLOAD TO S3\nfilename = 'projectexport.json'\nwith io.open('/tmp/'+filename, 'w', encoding='utf-8') as f:\n  #f.write(json.dumps(json_df, ensure_ascii=False))\n  f.write(r.text)\n  s3.upload_file('/tmp/'+filename, s3_bucket_kg, 'python-boto/'+filename)\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68309":{"id":68309,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-224,"y":80,"width":32,"height":32,"inputConnectorIDs":[68349],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Validate Variables"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"print('Component Name: '+str(component))\nprint('Run Time: '+str(run_time))\nprint('Row Count: '+str(row_count))\n\n\n\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68310":{"id":68310,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-224,"y":496,"width":32,"height":32,"inputConnectorIDs":[68338],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Zip"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3 as boto\nimport zipfile\nimport time\nimport os\n\n#### TODO:\n#         Variablize source/target file name, path, bucket, filter\n#         Clean-up orphaned files on start? \n#         add try: catch: blocks?\n#         Check for file size and disk space\n######\n\ns3 = boto.resource('s3')\nbucket = s3.Bucket('mtln-kareyg-public')\nraw_file = 'tgt_'\n\n# local file variables\nmetl_dir = '/tmp/'\nmetl_file = 'raw'\nmetl_filenum = 1\nzip_list = []\nzip_name = raw_file + '.zip'\n\ns3_final_file = 'returned_' + time.strftime('%Y%m%d-%H%M%S') + '.zip'\ns3_target_begin = 'junk/'\ns3_target_dir = 'junk/transformed/'\n\nprint('starting S3 zip sequence')\n\n# loop through objects within a specific directory\nfor obj in bucket.objects.filter(Prefix=s3_target_begin):\n  # if the object matches what we are looking for...\n  if raw_file in obj.key:\n    print('file to be zipped: ' + obj.key)\n    s3_source_file = obj.key\n    \n    # download our file \n    bucket.download_file(s3_source_file, metl_dir + metl_file + str(metl_filenum) + '.csv')\n    print('File: ' + s3_source_file + ' saved to: '+ metl_dir + metl_file + str(metl_filenum) + '.csv')\n    zip_list.append(metl_dir + metl_file + str(metl_filenum) + '.csv')\n    metl_filenum += 1\n\n#let's zip it up\nwith zipfile.ZipFile(metl_dir + zip_name, 'w', compression=zipfile.ZIP_DEFLATED) as myzip:\n    for each in zip_list:\n      myzip.write(each)\n      print('zipped: ' + each)\n    myzip.close()\n\nprint('zipped file: ' + zip_name)\n\n# next push file back to S3 in the same directory\nbucket.upload_file(metl_dir + zip_name, s3_target_dir + s3_final_file)\nprint('Shipped back to S3: ' + s3_target_dir + s3_final_file)\n\n# delete the original file in the S3 bucket?\n\n# remove local files - put this in another script in the case of failure\n# os.remove(metl_dir + metl_file)\n# os.remove(metl_dir + zip_name)\n\n### Helpers ###\n# bucket.objects.all():\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68311":{"id":68311,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-768,"y":-272,"width":32,"height":32,"inputConnectorIDs":[68361],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68348],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"List Matillion Jobs"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import requests\nimport boto3 as boto\nimport csv\n\ns3 = boto.client('s3')\ns3_r = boto.resource('s3')\nbucket = s3_r.Bucket(s3_bucket_kg)\nec2_user = ''\nec2_pass = ''\n\n#Download files from S3 to local directory\nfor key in bucket.objects.all():\n  if 'python_instance_creds' in key.key:\n    s3dir_s3file = key.key\n    s3file = s3dir_s3file\n    localdir_s3file = '/tmp/' + s3file\n    s3.download_file(s3_bucket_kg, s3dir_s3file, localdir_s3file)\n    print('File: '+s3file+ ' saved to: '+ localdir_s3file)\n\nwith open('/tmp/python_instance_creds.csv') as csv_file:\n  csv_reader = csv.reader(csv_file, delimiter = ',')\n  line_count = 0\n  for row in csv_reader:\n    if line_count == 0:\n      ec2_user = str(row)[2:][:-2]\n      line_count += 1\n    if line_count == 1:\n      ec2_pass = str(row)[2:][:-2]                     \n  print('EC2 Credentials saved')\n      \nprint('EC2 User: ' + str(ec2_user))\nprint('EC2 Password: ' + str(ec2_pass))\n    \n########CREDENTIALS#######################################\n#username = 'ec2-user'\n#password = 'i-034ed9405aec79eee'\n\n#######EXPORT########################################\n# Get list of jobs\nr = requests.get('https://34.248.81.61/rest/v1/group/name/Matillion/project/name/Test/version/name/default/job', auth=(ec2_user,ec2_pass), verify=False)\nprint('Status creation list of jobs from DEV: ' + str(r))\n\n# Convert response to text\nr_text = r.text\n#print(r_text)\n\n# Replace double quotes and spaces\nr_text =  r_text.replace(\"\\\", \\\"\",\",\")\n#print(r_text)\n\n# Replace opening square bracket and space\nr_text =  r_text.replace(\"[ \\\"\",\"\")\n#print(r_text)\n\n# Replace closing square bracket and space\nr_text =  r_text.replace(\"\\\" ]\",\"\")\n#print(r_text)\n\n#print('Split string into string list by comma\\n')\nresultList = r_text.split(\",\")\nprint(resultList)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68312":{"id":68312,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-480,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68342,68350,68356,68357,68366],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68313":{"id":68313,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-768,"y":48,"width":32,"height":32,"inputConnectorIDs":[68367],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68375],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Oauth"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import requests\nimport json\n\nr = requests.get('http://63.32.117.60/rest/v1/oauth/name/BBBBB/export',\n                  auth=('ec2-user','i-0ee893479443a160c'))\n\nprint(r)\nprint(r.text)\n\nimport requests\nimport json\n\nheaders = {'Content-type': 'application/json'}\nbody = '''\n{\n\t\"objects\": [{\n\t\t\"name\": \"oauth_import2\",\n\t\t\"serviceID\": 5,\n        \"properties\":{\n        \"ClientID\": \"0c8753e4-464a-4ff0-816d-b2bae122f629\",\n        \"ClientSecret\": \"LvDip6zKedTRi1NvTmISOaVugdnmy7Cp\"\n\t}}]\n}\n'''\n\nbody_json = json.loads(body)\n\nr = requests.post('http://34.254.253.72/rest/v1/oauth/import',\n                  auth=('ec2-user','i-08f5f68b32b2e54ef'),\n                  json=body_json,\n                  headers=headers)\nprint(r)\nprint(r.text)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 2"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68314":{"id":68314,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":773867971,"x":-400,"y":80,"width":32,"height":32,"inputConnectorIDs":[68350],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68349,68354],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Component","mapTo":"component"},"2":{"slot":2,"fromId":null,"fromName":"Completed At","mapTo":"run_time"},"3":{"slot":3,"fromId":null,"fromName":"Row Count","mapTo":"row_count"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Load 19** Files"}}}},"visible":true},"4":{"slot":4,"name":"S3 Object Prefix","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"s3://metl-flights-eu-west"}}}},"visible":true},"5":{"slot":5,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"6":{"slot":6,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"7":{"slot":7,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"8":{"slot":8,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"flights_raw"}}}},"visible":true},"9":{"slot":9,"name":"Load Columns","elements":{},"visible":true},"10":{"slot":10,"name":"Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Custom]"}}}},"visible":true},"11":{"slot":11,"name":"File Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"CSV"}}}},"visible":true},"12":{"slot":12,"name":"Compression","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AUTO"}}}},"visible":true},"20":{"slot":20,"name":"Record Delimiter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":true},"21":{"slot":21,"name":"Field Delimiter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":true},"22":{"slot":22,"name":"Skip Header","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"1"}}}},"visible":true},"23":{"slot":23,"name":"Date Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":true},"24":{"slot":24,"name":"Time Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":true},"25":{"slot":25,"name":"Timestamp Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":true},"26":{"slot":26,"name":"","elements":{},"visible":false},"27":{"slot":27,"name":"Escape","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"CHAR_OR_ESCAPE_SEQUENCE","value":""}}}},"visible":true},"28":{"slot":28,"name":"Escape Unenclosed Field","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"CHAR_OR_ESCAPE_SEQUENCE","value":""}}}},"visible":true},"29":{"slot":29,"name":"Trim Space","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"30":{"slot":30,"name":"Field Optionally Enclosed","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"CHAR","value":""}}}},"visible":true},"31":{"slot":31,"name":"Null If","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"NA"}}}},"visible":true},"32":{"slot":32,"name":"Error On Column Count Mismatch","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"33":{"slot":33,"name":"Empty Field as Null","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"True"}}}},"visible":true},"34":{"slot":34,"name":"Encoding Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":true},"35":{"slot":35,"name":"Skip Blank Lines","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"36":{"slot":36,"name":"Replace Invalid Characters","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"40":{"slot":40,"name":"Enable Octal","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"41":{"slot":41,"name":"Allow Duplicates","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"42":{"slot":42,"name":"Strip Outer Array","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"43":{"slot":43,"name":"Strip Null Values","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"44":{"slot":44,"name":"Ignore UTF8 Errors","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"45":{"slot":45,"name":"Nest Columns","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"46":{"slot":46,"name":"Null If","elements":{},"visible":false},"47":{"slot":47,"name":"Trim Space","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"50":{"slot":50,"name":"Null If","elements":{},"visible":false},"51":{"slot":51,"name":"Trim Space","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"60":{"slot":60,"name":"Ignore UTF8 Errors","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"61":{"slot":61,"name":"Preserve Space","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"62":{"slot":62,"name":"Strip Outer Element","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"63":{"slot":63,"name":"Disable Snowflake Data","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"64":{"slot":64,"name":"Disable Auto Convert","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"66":{"slot":66,"name":"Null If","elements":{},"visible":false},"67":{"slot":67,"name":"Trim Space","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"70":{"slot":70,"name":"Null If","elements":{},"visible":false},"71":{"slot":71,"name":"Trim Space","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"120":{"slot":120,"name":"On Error","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Abort Statement"}}}},"visible":true},"121":{"slot":121,"name":"n","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":""}}}},"visible":false},"122":{"slot":122,"name":"Size Limit (B)","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":""}}}},"visible":true},"123":{"slot":123,"name":"Purge Files","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"124":{"slot":124,"name":"Truncate Columns","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"125":{"slot":125,"name":"Force Load","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"True"}}}},"visible":true},"126":{"slot":126,"name":"Match By Column Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"None"}}}},"visible":false},"140":{"slot":140,"name":"Encryption","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"None"}}}},"visible":true},"141":{"slot":141,"name":"Master Key","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"142":{"slot":142,"name":"KMS Key Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"200":{"slot":200,"name":"Stage","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Custom]"}}}},"visible":true},"201":{"slot":201,"name":"Pattern","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"CSV/19.*"}}}},"visible":true},"203":{"slot":203,"name":"Metadata Fields","elements":{},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68315":{"id":68315,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":773867971,"x":-208,"y":-64,"width":32,"height":32,"inputConnectorIDs":[68365],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68344],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Load 1987 and 1988 Files"}}}},"visible":true},"4":{"slot":4,"name":"S3 Object Prefix","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"s3://metl-flights-eu-west"}}}},"visible":true},"5":{"slot":5,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"6":{"slot":6,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"7":{"slot":7,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"8":{"slot":8,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"flights_raw"}}}},"visible":true},"9":{"slot":9,"name":"Load Columns","elements":{},"visible":true},"10":{"slot":10,"name":"Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Custom]"}}}},"visible":true},"11":{"slot":11,"name":"File Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"CSV"}}}},"visible":true},"12":{"slot":12,"name":"Compression","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AUTO"}}}},"visible":true},"20":{"slot":20,"name":"Record Delimiter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":true},"21":{"slot":21,"name":"Field Delimiter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":true},"22":{"slot":22,"name":"Skip Header","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"1"}}}},"visible":true},"23":{"slot":23,"name":"Date Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":true},"24":{"slot":24,"name":"Time Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":true},"25":{"slot":25,"name":"Timestamp Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":true},"26":{"slot":26,"name":"","elements":{},"visible":false},"27":{"slot":27,"name":"Escape","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"CHAR_OR_ESCAPE_SEQUENCE","value":""}}}},"visible":true},"28":{"slot":28,"name":"Escape Unenclosed Field","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"CHAR_OR_ESCAPE_SEQUENCE","value":""}}}},"visible":true},"29":{"slot":29,"name":"Trim Space","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"30":{"slot":30,"name":"Field Optionally Enclosed","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"CHAR","value":""}}}},"visible":true},"31":{"slot":31,"name":"Null If","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"NA"}}}},"visible":true},"32":{"slot":32,"name":"Error On Column Count Mismatch","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"33":{"slot":33,"name":"Empty Field as Null","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"True"}}}},"visible":true},"34":{"slot":34,"name":"Encoding Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":true},"35":{"slot":35,"name":"Skip Blank Lines","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"36":{"slot":36,"name":"Replace Invalid Characters","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"40":{"slot":40,"name":"Enable Octal","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"41":{"slot":41,"name":"Allow Duplicates","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"42":{"slot":42,"name":"Strip Outer Array","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"43":{"slot":43,"name":"Strip Null Values","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"44":{"slot":44,"name":"Ignore UTF8 Errors","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"45":{"slot":45,"name":"Nest Columns","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"46":{"slot":46,"name":"Null If","elements":{},"visible":false},"47":{"slot":47,"name":"Trim Space","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"50":{"slot":50,"name":"Null If","elements":{},"visible":false},"51":{"slot":51,"name":"Trim Space","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"60":{"slot":60,"name":"Ignore UTF8 Errors","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"61":{"slot":61,"name":"Preserve Space","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"62":{"slot":62,"name":"Strip Outer Element","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"63":{"slot":63,"name":"Disable Snowflake Data","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"64":{"slot":64,"name":"Disable Auto Convert","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"66":{"slot":66,"name":"Null If","elements":{},"visible":false},"67":{"slot":67,"name":"Trim Space","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"70":{"slot":70,"name":"Null If","elements":{},"visible":false},"71":{"slot":71,"name":"Trim Space","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"120":{"slot":120,"name":"On Error","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Abort Statement"}}}},"visible":true},"121":{"slot":121,"name":"n","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":""}}}},"visible":false},"122":{"slot":122,"name":"Size Limit (B)","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":""}}}},"visible":true},"123":{"slot":123,"name":"Purge Files","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"124":{"slot":124,"name":"Truncate Columns","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"125":{"slot":125,"name":"Force Load","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"126":{"slot":126,"name":"Match By Column Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"None"}}}},"visible":false},"140":{"slot":140,"name":"Encryption","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"None"}}}},"visible":true},"141":{"slot":141,"name":"Master Key","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"142":{"slot":142,"name":"KMS Key Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"200":{"slot":200,"name":"Stage","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Custom]"}}}},"visible":true},"201":{"slot":201,"name":"Pattern","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"CSV/19(87|88).*"}}}},"visible":true},"203":{"slot":203,"name":"Metadata Fields","elements":{},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68316":{"id":68316,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1896325668,"x":-32,"y":-64,"width":32,"height":32,"inputConnectorIDs":[68344],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Transform Months"}}}},"visible":true},"2":{"slot":2,"name":"Transformation Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"s3_transform1"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68317":{"id":68317,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-368,"y":-160,"width":32,"height":32,"inputConnectorIDs":[68352],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68355],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Break instance with load to DF"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3 as boto\nimport botocore\nimport gzip, csv, os\nimport pandas as pd\nimport glob\n\n# Set variables, create lists\ns3 = boto.client('s3')\ns3_r = boto.resource('s3')\nli = []\nlocaldir_list = []\nbucket = s3_r.Bucket(s3_bucket)\n\n#Download files from S3 to local directory\nfor key in bucket.objects.all():\n  #Criteria for which files are loaded\n  if 'CSV/19' in key.key:\n    s3dir_s3file = key.key\n    s3file = s3dir_s3file[4:]\n    localdir_s3file = localdir + s3file\n    s3.download_file(s3_bucket, s3dir_s3file, localdir_s3file)\n    print('File: '+s3file+ ' saved to: '+ localdir_s3file)\n    localdir_list.append(str(localdir_s3file))\n    \nprint(localdir_list)\n\n#Convert each file in localdir_list to pandas DF, save list of DF to li\nfor each in localdir_list:\n  with gzip.open(each) as f:\n  \tdf = pd.read_csv(f)\n  \tli.append(df)\n  \tprint('DataFrame shape: '+ str(df.shape))\n\n#Concat all DFs in li into single DF\nflights_df = pd.concat(li,axis=0,ignore_index=True)\n\nprint(flights_df)\nprint(flights_df.shape)\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68318":{"id":68318,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-592,"y":-192,"width":32,"height":32,"inputConnectorIDs":[68373],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68372],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Import Project from S3"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import requests\nimport boto3 as boto\nimport csv\nimport json\nimport pandas as pd\nfrom io import StringIO\nimport io\nimport os.path\n\ns3 = boto.client('s3')\ns3_r = boto.resource('s3')\nbucket = s3_r.Bucket(s3_bucket_kg)\nec2_user = ''\nec2_pass = ''\n\n########MIGRATE_INTO CREDENTIALS#######################################\n#Download file from S3 to local directory\nfor key in bucket.objects.all():\n  if 'migrate_instance_creds' in key.key:\n    s3dir_s3file = key.key\n    s3file = s3dir_s3file\n    localdir_s3file = '/tmp/' + s3file\n    s3.download_file(s3_bucket_kg, s3dir_s3file, localdir_s3file)\n    print('File: '+s3file+ ' saved to: '+ localdir_s3file)\n\nwith open('/tmp/migrate_instance_creds.csv') as csv_file:\n  csv_reader = csv.reader(csv_file, delimiter = ',')\n  line_count = 0\n  for row in csv_reader:\n    if line_count == 0:\n      ec2_user = str(row)[2:][:-2]\n      line_count += 1\n    if line_count == 1:\n      ec2_pass = str(row)[2:][:-2]                     \n#  print('EC2 Credentials saved')\n      \n#print('EC2 User: ' + str(ec2_user))\n#print('EC2 Password: ' + str(ec2_pass))\n\n#######IMPORT########################################\n#2 steps - 1) download projectexport.json from mtln-kareyg/python-boto/ to local /tmp/ directory and 2) import from /tmp/ directory into karey_SF_migrate \n\n#IMPORT PROJECT FROM S3\nfor key in bucket.objects.all():\n  if 'projectexport' in key.key:\n\t#title files for boto.download_file command\n    s3dir_s3file = key.key #python-boto/projectexport.json\n    s3file = os.path.basename(s3dir_s3file) #projectexport.json\n    localdir_s3file = '/tmp/'+s3file #/tmp/projectexport.json\n    #print(s3dir_s3file, s3file, localdir_s3file) #validation\n\n\t#download file to local directory\n    s3.download_file(s3_bucket_kg, s3dir_s3file, localdir_s3file)\n    print('File: '+s3file+ ' saved to: '+ localdir_s3file) #validation\n\n#INSTANCE karey_SF_migrate IMPORT PROJECT    \nwith open(localdir_s3file) as project_json:\n  loaded=json.load(project_json)\n  headers = {'Content-type': 'application/json'}\n  print(loaded)\n  r = requests.post('https://34.245.96.217/rest/v1/group/name/Matillion/project/import?onConflict=OVERWRITE', \n                 auth=(ec2_user,ec2_pass), \n                 verify=False,\n                 json = loaded,\n                 headers=headers\n                  )\n  print(r.status_code)\n  print(r.text)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68319":{"id":68319,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-48,"y":208,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Save Table Details to CSV"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"#IMPORT MODULES \nimport boto3\nimport pandas as pd\nfrom io import StringIO\nfrom datetime import datetime\n#SET VARIABLES\nnow = datetime.now()\ncurrent_time = now.strftime(\"%H:%M:%S\")\nbucket = 'karey-pythonboto'\n\n#CREATE DATAFRAME WITH TABLE INFORMATION\nd = {'TABLE_NAME': [table], \n     'TABLE_CATALOGUE': [catalogue],\n\t 'TABLE_SCHEMA': [schema],\n     'TABLE_TYPE': [type],\n\t 'TIME_OF_MIGRATION':[current_time]}\ndf = pd.DataFrame(data=d)\n\n#WRITE DATAFRAME TO NEW CSV IN S3 BUCKET\ncsv_buffer = StringIO()\ndf.to_csv(csv_buffer)\ns3_resource = boto3.resource('s3')\ncsv_name = str(table+'_tabledf.csv')\ns3_resource.Object(bucket, csv_name).put(Body=csv_buffer.getvalue())\n  "}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[68377]},"68320":{"id":68320,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-768,"y":352,"width":32,"height":32,"inputConnectorIDs":[68353],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68341],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"LMS - Import Project from S3"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"#IMPORT PYTHON MODULES\nimport requests\n\n#DECLARE VARIABLES\nlocaldir_s3file = 'myproject.json'\nec2_user = '<<EC2 instance username>>'\nec2_pass = '<<EC2 instance password>>'\nheaders = {'Content-type': 'application/json'}\napi_call = 'https://10.100.10.100/rest/v1/group/name/Matillion/project/import?onConflict=OVERWRITE'\n\n#INSTANCE karey_SF_migrate IMPORT PROJECT    \nwith open(localdir_s3file) as project_json:\n  loaded=json.load(project_json)\n  r = requests.post(api_call, \n                 auth=(ec2_user,ec2_pass), \n                 verify=False,\n                 json = loaded,\n                 headers=headers\n                  )\n  print(r.status_code)\n  print(r.text)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68321":{"id":68321,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-368,"y":-64,"width":32,"height":32,"inputConnectorIDs":[68342],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68352,68365],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Break instance with transform"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3 as boto\nimport botocore\nimport gzip, csv, os\nimport pandas as pd\nimport glob\n\n# Set variables, create lists\ns3 = boto.client('s3')\ns3_r = boto.resource('s3')\nli = []\nlocaldir_list = []\nbucket = s3_r.Bucket('metl-flights-eu-west')\n\n#Download files from S3 to local directory\nfor key in bucket.objects.all():\n  #Criteria for which files are loaded\n  if 'CSV/1987' in key.key or 'CSV/1988' in key.key:\n    s3dir_s3file = key.key\n    s3file = s3dir_s3file[4:]\n    localdir_s3file = localdir + s3file\n    s3.download_file(s3_bucket, s3dir_s3file, localdir_s3file)\n    print('File: '+s3file+ ' saved to: '+ localdir_s3file)\n    localdir_list.append(str(localdir_s3file))\n    \nprint(localdir_list)\n\n#Convert each file in localdir_list to pandas DF, save list of DF to li\nfor each in localdir_list:\n  with gzip.open(each) as f:\n  \tdf = pd.read_csv(f)\n  \tli.append(df)\n  \tprint('DataFrame shape: '+ str(df.shape))\n\n#Concat all DFs in li into single DF\nflights_df = pd.concat(li,axis=0,ignore_index=True)\n\nprint(flights_df)\nprint(flights_df.shape)\n\n#Transform by changing name of numerical month to actual name\nflights_df.loc[flights_df['Month'] == 1, 'MonthName'] = 'January'\nflights_df.loc[flights_df['Month'] == 2, 'MonthName'] = 'February'\nflights_df.loc[flights_df['Month'] == 3, 'MonthName'] = 'March'\nflights_df.loc[flights_df['Month'] == 4, 'MonthName'] = 'April'\nflights_df.loc[flights_df['Month'] == 5, 'MonthName'] = 'May'\nflights_df.loc[flights_df['Month'] == 6, 'MonthName'] = 'June'\nflights_df.loc[flights_df['Month'] == 7, 'MonthName'] = 'July'\nflights_df.loc[flights_df['Month'] == 8, 'MonthName'] = 'August'\nflights_df.loc[flights_df['Month'] == 9, 'MonthName'] = 'September'\nflights_df.loc[flights_df['Month'] == 10, 'MonthName'] = 'October'\nflights_df.loc[flights_df['Month'] == 11, 'MonthName'] = 'November'\nflights_df.loc[flights_df['Month'] == 12, 'MonthName'] = 'December'\nprint(flights_df)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68322":{"id":68322,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-576,"y":656,"width":32,"height":32,"inputConnectorIDs":[68366],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68359],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Streamlit"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import streamlit as st\nimport pandas as pd\n\nst.write (\"\"\"\n# My First App\nHello *world*!\n\"\"\")"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68323":{"id":68323,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-592,"y":-272,"width":32,"height":32,"inputConnectorIDs":[68356],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68361],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Load S3 Credentials"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3 as boto\nimport csv\n\ns3 = boto.client('s3')\ns3_r = boto.resource('s3')\nbucket = s3_r.Bucket(s3_bucket)\nec2_user = ''\nec2_pass = ''\n\n#Download files from S3 to local directory\nfor key in bucket.objects.all():\n  if 'python_instance_creds' in key.key:\n    s3dir_s3file = key.key\n    s3file = s3dir_s3file\n    localdir_s3file = '/tmp/' + s3file\n    s3.download_file(s3_bucket, s3dir_s3file, localdir_s3file)\n    print('File: '+s3file+ ' saved to: '+ localdir_s3file)\n\nwith open('/tmp/python_instance_creds.csv') as csv_file:\n  csv_reader = csv.reader(csv_file, delimiter = ',')\n  line_count = 0\n  for row in csv_reader:\n    if line_count == 0:\n      ec2_user = str(row)[2:][:-2]\n      line_count += 1\n    if line_count == 1:\n      ec2_pass = str(row)[2:][:-2]                     \n  print('EC2 Credentials saved')\n      \n    \nprint('EC2 User: ' + str(ec2_user))\nprint('EC2 Password: ' + str(ec2_pass))\n    \n\n\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68324":{"id":68324,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-48,"y":400,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Insert into Variant SF Table"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"INSERT INTO \"DEV_DB\".\"KAREY\".\"api_test\"(\"data\") select parse_json('${response}')"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[68376]},"68325":{"id":68325,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-576,"y":416,"width":32,"height":32,"inputConnectorIDs":[68341],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68340],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"LMS - Export Job & Load to S3"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"#IMPORT PYTHON MODULES\nimport requests\n\n#DECLARE VARIABLES \nec2_user = '<<EC2 instance username>>'\nec2_password = '<<EC2 instance password>>'\napi_call = 'https://10.100.10.100/rest/v1/group/name/Matillion/project/name/Test/version/name/default/job/name/python_examples/export'\n\n#EXPORT JOB TO R\nr = requests.get(api_call, \n                 auth=(ec2_user,ec2_pass), \n                 verify=False)\nprint(r.status_code)\nprint(r.text)\n\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68326":{"id":68326,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186829,"x":-592,"y":128,"width":32,"height":32,"inputConnectorIDs":[68363],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SetNewDefaultEnvironmentVarVal"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import requests\n\nr = requests.post('http://demo-aws-sf.matillion-sa.matillion.com/rest/v1/group/name/Demonstration%20Projects/project/name/Karey%20G/environment/name/default/variable/name/env_var_modify/set/value/CHANGED',\n                  auth=('karey',''))"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true},"5":{"slot":5,"name":"User","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Restricted"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68327":{"id":68327,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-768,"y":-32,"width":32,"height":32,"inputConnectorIDs":[68368],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68339],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Kick Off Matillion Job"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import requests\n\njob_name = ['TechWorkshop_orch','TechWorkshop_orch2']\n\nfor each in job_name:\n  r = requests.post('http://54.229.227.198/rest/v1/group/name/Matillion/project/name/KG/version/name/default/job/name/'+each+'/run?environmentName=demo_env', \n                 auth=('ec2-user','i-08f5f68b32b2e54ef'))\n\nr = requests.post('http://54.229.227.198/rest/v1/group/name/Matillion/project/name/KG/version/name/default/job/name/'+job_name+'/run?environmentName=demo_env', \n                 auth=('ec2-user','i-08f5f68b32b2e54ef'))\n\nprint(r.status_code)\nprint(r.text)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68328":{"id":68328,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":374945314,"x":-400,"y":496,"width":32,"height":32,"inputConnectorIDs":[68370],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68338],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Airports to S3"}}}},"visible":true},"4":{"slot":4,"name":"S3 Object Prefix","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"s3://mtln-kareyg-public/junk/"}}}},"visible":true},"5":{"slot":5,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"6":{"slot":6,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"7":{"slot":7,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"8":{"slot":8,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"tgt_Product"}}}},"visible":true},"10":{"slot":10,"name":"Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Custom]"}}}},"visible":true},"11":{"slot":11,"name":"File Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"CSV"}}}},"visible":true},"12":{"slot":12,"name":"Compression","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"NONE"}}}},"visible":true},"20":{"slot":20,"name":"Record Delimiter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":true},"21":{"slot":21,"name":"Field Delimiter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":true},"23":{"slot":23,"name":"Date Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":true},"24":{"slot":24,"name":"Time Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":true},"25":{"slot":25,"name":"Timestamp Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":true},"26":{"slot":26,"name":"","elements":{},"visible":false},"27":{"slot":27,"name":"Escape","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"CHAR_OR_ESCAPE_SEQUENCE","value":""}}}},"visible":true},"28":{"slot":28,"name":"Escape Unenclosed Field","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"CHAR_OR_ESCAPE_SEQUENCE","value":""}}}},"visible":true},"30":{"slot":30,"name":"Field Optionally Enclosed","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"CHAR","value":""}}}},"visible":true},"31":{"slot":31,"name":"Null If","elements":{},"visible":true},"40":{"slot":40,"name":"Enable Octal","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"41":{"slot":41,"name":"Allow Duplicates","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"42":{"slot":42,"name":"Strip Outer Array","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"43":{"slot":43,"name":"Strip Null Values","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"44":{"slot":44,"name":"Ignore UTF8 Errors","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"45":{"slot":45,"name":"Nest Columns","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"46":{"slot":46,"name":"Null If","elements":{},"visible":false},"47":{"slot":47,"name":"Trim Space","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"50":{"slot":50,"name":"Null If","elements":{},"visible":false},"51":{"slot":51,"name":"Trim Space","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"65":{"slot":65,"name":"","elements":{},"visible":false},"66":{"slot":66,"name":"Null If","elements":{},"visible":false},"67":{"slot":67,"name":"Trim Space","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"70":{"slot":70,"name":"Null If","elements":{},"visible":false},"71":{"slot":71,"name":"Trim Space","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"120":{"slot":120,"name":"Overwrite","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"True"}}}},"visible":true},"121":{"slot":121,"name":"Single File","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"122":{"slot":122,"name":"Max File Size","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":true},"123":{"slot":123,"name":"Include Headers","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"True"}}}},"visible":true},"140":{"slot":140,"name":"Encryption","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"None"}}}},"visible":true},"141":{"slot":141,"name":"Master Key","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"142":{"slot":142,"name":"KMS Key Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"200":{"slot":200,"name":"Stage","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Custom]"}}}},"visible":true},"201":{"slot":201,"name":"File Prefix","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"tgt_product"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68329":{"id":68329,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186829,"x":-576,"y":720,"width":32,"height":32,"inputConnectorIDs":[68358],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Calendar to spreadsheet"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"attendees = ['alex.xu@sogeti.com', 'arjandijke@hotmail.com', 'bas.biesbroeck@sogeti.com', 'charlotte.de.pauw@sogeti.com', 'daphne-le.roux@sogeti.com', 'fawzi.ouadah@sogeti.com', 'henri.plender@sogeti.com', 'igor.diependaal@sogeti.com', 'james.van.ijsseldijk@sogeti.com', 'jan.oosting@sogeti.com', 'karlijn.bohmer@sogeti.com', 'Hielema, Martijn <martijn.hielema@sogeti.com>', 'martijn.lemmen@sogeti.com', 'mattijs.van.houten@sogeti.com', 'michael.alkema@sogeti.com', 'nico.van.binsbergen@sogeti.com', 'nilesh.a.deshmukh@sogeti.com', 'prakash.a.rajendran@sogeti.com', 'priya.a.divekar@sogeti.com', 'sanjay.nayyar@sogeti.com', 'vincent.loeff@sogeti.com', 'youp.souren@sogeti.com']\n\nfor each in attendees:\n  if '<' in each:\n    print(each.split('<')[0])\n  else:\n    print('')\n    \nfor each_email in attendees:\n  if '<' in each_email:\n    print(each_email.split('<')[1][:-1])\n  else:\n    print(each_email)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true},"5":{"slot":5,"name":"User","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Restricted"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68330":{"id":68330,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-400,"y":368,"width":32,"height":32,"inputConnectorIDs":[68360],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68345,68370],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"2015 2017 To Grid"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"#to_grid = []\n#to_grid.append('2017')\n#to_grid.append('2015')\n\n\n\n#to_grid = [item for sublist in to_grid for item in sublist] # list of lists to list, to undo nested lists\n#to_grid = [[json.dumps(x)] for x in to_grid] # list to list of lists, to get back into single list of list form for grid variable\n\ncontext.updateGridVariable('cfb_years',[['2017'],['2015']])\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68331":{"id":68331,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186829,"x":-784,"y":656,"width":32,"height":32,"inputConnectorIDs":[68359],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68358],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Snowflake Python Connector"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"#!/usr/bin/env python\nimport snowflake.connector\n\n# Gets the version\nctx = snowflake.connector.connect(\n    user='kg',\n    password='Xian__22',\n    account='mha93119',\n\twarehouse='COMPUTE_WH',\n    database='DEMO_DB',\n    schema='PUBLIC'\n    )\ncs = ctx.cursor()\ntry:\n    cs.execute(\"SELECT current_version()\")\n    one_row = cs.fetchone()\n    print(one_row[0])\nfinally:\n    cs.close()\nctx.close()"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true},"5":{"slot":5,"name":"User","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Restricted"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68332":{"id":68332,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-595,"y":-25,"width":32,"height":32,"inputConnectorIDs":[68339],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68367],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Env Vars"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import requests\nimport json\n\n#print value of env variable - http://<InstanceAddress>/rest/v1/group/name/<groupname>/project/name/<projectName>/environment/name/<environmentName>/variable/name/<variableName>/value\n#r = requests.get('http://34.241.132.247/rest/v1/group/name/Matillion/project/name/KG/environment/name/demo_env/variable/name/zip_code/value',auth=('ec2-user','i-08f5f68b32b2e54ef'))\n\n#set new value\n#r = requests.post('http://34.241.132.247/rest/v1/group/name/Matillion/project/name/KG/environment/name/demo_env/variable/name/zip_code/set/value/54321',auth=('ec2-user','i-08f5f68b32b2e54ef'))\n\n#print(r)\n#print(r.text)\n\n#print all env vars in instance\n#http://<InstanceAddress>/rest/v1/group/name/<groupname>/project/name/<projectName>/environment/name/<environmentName>/variable/export\n#r = requests.get('http://34.241.132.247/rest/v1/group/name/Matillion/project/name/KG/environment/name/demo_env/export',auth=('ec2-user','i-08f5f68b32b2e54ef'))\n#print(r.text)\n\n\n#import vars to instance\n\nimport requests\nimport json\n\nheaders = {'Content-type': 'application/json'}\nbody = '''\n{\n\t\"objects\": [{\n\t\t\"name\": \"var_import3\",\n\t\t\"value\": \"yerp\"\n\t}],\n\t\"version\": \"default\",\n\t\"environment\": \"demo_env\"\n}\n'''\n\nbody_json = json.loads(body)\n\nr = requests.post('http://34.245.8.188/rest/v1/group/name/Matillion/project/name/KG/environment/name/demo_env/variable/import',\n                  auth=('ec2-user','i-08f5f68b32b2e54ef'),\n                  json=body_json,\n                  headers=headers)\nprint(r)\nprint(r.text)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 2"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68333":{"id":68333,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-576,"y":480,"width":32,"height":32,"inputConnectorIDs":[68369],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Grid Vars"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import requests\nimport json\n\nanimal_list = ['cat','dog']\nattribute_list = ['text','createdAt','type']\ngrid_list = []\n\nfor each in animal_list:\n  r = requests.get('https://cat-fact.herokuapp.com/facts/random?animal_type='+str(each)+'&amount=5')\n  for x in range(5):\n    response_list = []\n    for attribute in attribute_list:      \n      response_list.append(r.json()[x][attribute])\n    grid_list.append(response_list)\n\ncontext.updateGridVariable('animalfacts', grid_list)\nprint (context.getGridVariable('animalfacts'))\n  \n#r = requests.get('https://cat-fact.herokuapp.com/facts/random?animal_type=cat&amount=5')\n\n#print(r.json()[0])\n\n#grid_list = []\n\n#for x in range(5):\n#  response_list = []\n  #print(r.json()[x]['text'])\n#  response_list.append(r.json()[x]['text'])\n  #print(r.json()[x]['createdAt'])\n#  response_list.append(r.json()[x]['createdAt'])\n  #print(r.json()[x]['type'])\n#  response_list.append(r.json()[x]['type'])\n#  grid_list.append(response_list)\n\n#context.updateGridVariable('animalfacts', grid_list)\n#print (context.getGridVariable('animalfacts'))\n  \n#context.updateGridVariable('animalfacts', [['text','createdAt','type'],['of','of2','of3'],['lists','lists2','lists3'],['!','!2','!3']])\n#print (context.getGridVariable('animalfacts'))\n  \n  \nr2 = requests.get('https://cat-fact.herokuapp.com/facts/random?animal_type=dog&amount=5')\n\n#print(r2.json()[0])\n\nfor x in range(5):\n  print(r2.json()[x]['text'])\n  print(r2.json()[x]['createdAt'])\n  print(r.json()[x]['type'])\n  \ncontext.updateGridVariable('animalfacts', [['text','createdAt','type'],['of','of2','of3'],['lists','lists2','lists3'],['!','!2','!3']])\nprint (context.getGridVariable('animalfacts'))"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68334":{"id":68334,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186829,"x":-591,"y":41,"width":32,"height":32,"inputConnectorIDs":[68375],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68371],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Move Project Between Instances"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import requests\nimport json\n\ninstance_address = 'https://ec2-54-74-39-203.eu-west-1.compute.amazonaws.com'\ninstance_username = 'karey'\ninstance_password = 'Tallywacker_194'\ngroup_name = 'Matillion'\nproject_name = 'Karey%20G'\n\ndestination_instance_address = 'https://3.249.24.173'\ndestination_instance_username = 'karey'\ndestination_instance_password = 'Tallywacker_194'\ndestination_group_name = 'Matillion'\n\napi_call = instance_address+'/rest/v1/group/name/'+group_name+'/project/name/'+project_name+'/export'\napi_post = destination_instance_address+'/rest/v1/group/name/'+destination_group_name+'/project/import?onConflict=OVERWRITE'\n\nprint('URI: '+api_call)\n\nr = requests.get(api_call,\n                 auth=(instance_username,instance_password),\n                 verify=False)\n\nproject_json = json.loads(r.text)\nprint('Project in JSON format: '+str(project_json))\nprint(type(project_json))\n\nprint('Post to destination URI: '+api_post)\n\nheaders = {'Content-type': 'application/json'}\nr2 = requests.post(api_post,\n                 auth=(destination_instance_username,destination_instance_password),\n                 verify=False,\n                 json = project_json,\n                 headers=headers\n                  )\n\nprint(r2.status_code)\nprint(r2.text)\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true},"5":{"slot":5,"name":"User","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Restricted"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68335":{"id":68335,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"ITERATE","implementationID":-424773870,"x":-224,"y":368,"width":32,"height":16,"inputConnectorIDs":[68345],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68343],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Grid Iterator 1"}}}},"visible":true},"3":{"slot":3,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"cfb_years"}}}},"visible":true},"4":{"slot":4,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"year"},"2":{"slot":2,"type":"STRING","value":"cfb_year"}}}},"visible":true},"5":{"slot":5,"name":"Break on Failure","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"No"}}}},"visible":true},"6":{"slot":6,"name":"Concurrency","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Sequential"}}}},"visible":true},"999":{"slot":999,"name":"Record Values In Task History","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Yes"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[68374],"inputIterationConnectorIDs":[]},"68336":{"id":68336,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186829,"x":-913,"y":-111,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python Script 1"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import requests\n\nr = requests.post(http://<InstanceAddress>/rest/v1/group/name/<groupName>/project/name/<projectName>/schedule/import)\nr = requests.get('https://34.248.81.61/rest/v1/group/name/Matillion/project/name/Test/version/name/default/job', auth=(ec2_user,ec2_pass), verify=False)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true},"5":{"slot":5,"name":"User","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Restricted"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68337":{"id":68337,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186829,"x":-768,"y":128,"width":32,"height":32,"inputConnectorIDs":[68371],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68363],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Move OAuth Between Instances"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import requests\nimport json\n\ninstance_address = 'https://ec2-54-217-62-153.eu-west-1.compute.amazonaws.com'\ninstance_username = 'karey'\ninstance_password = 'Tallywacker_194'\n\ndestination_instance_address = 'https://54.76.250.37'\ndestination_instance_username = 'karey'\ndestination_instance_password = 'Tallywacker_194'\n\noauth_profiles ='dropbox'\n\napi_call = instance_address+'/rest/v1/oauth/name/'+oauth_profiles+'/export'\nprint(api_call)\napi_post = destination_instance_address+'rest/v1/oauth/import?onConflict=OVERWRITE'\n\nprint('URI: '+api_call)\n\nr = requests.get(api_call,\n                 auth=(instance_username,instance_password),\n                 verify=False)\n\nproject_json = json.loads(r.text)\nprint('Project in JSON format: '+str(project_json))\nprint(type(project_json))\n\n#print('Post to destination URI: '+api_post)\n\n#headers = {'Content-type': 'application/json'}\n#r2 = requests.post(api_post,\n#                 auth=(destination_instance_username,destination_instance_password),\n#                 verify=False,\n#                 json = project_json,\n#                 headers=headers\n#                  )\n\n#print(r2.status_code)\n#print(r2.text)\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true},"5":{"slot":5,"name":"User","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Restricted"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{},"failureConnectors":{},"unconditionalConnectors":{"68338":{"id":68338,"sourceID":68328,"targetID":68310},"68339":{"id":68339,"sourceID":68327,"targetID":68332},"68340":{"id":68340,"sourceID":68325,"targetID":68307},"68341":{"id":68341,"sourceID":68320,"targetID":68325},"68342":{"id":68342,"sourceID":68312,"targetID":68321},"68343":{"id":68343,"sourceID":68335,"targetID":68305},"68344":{"id":68344,"sourceID":68315,"targetID":68316},"68345":{"id":68345,"sourceID":68330,"targetID":68335},"68346":{"id":68346,"sourceID":68303,"targetID":68302},"68347":{"id":68347,"sourceID":68301,"targetID":68303},"68348":{"id":68348,"sourceID":68311,"targetID":68308},"68349":{"id":68349,"sourceID":68314,"targetID":68309},"68350":{"id":68350,"sourceID":68312,"targetID":68314},"68352":{"id":68352,"sourceID":68321,"targetID":68317},"68353":{"id":68353,"sourceID":68299,"targetID":68320},"68354":{"id":68354,"sourceID":68314,"targetID":68301},"68355":{"id":68355,"sourceID":68317,"targetID":68298},"68356":{"id":68356,"sourceID":68312,"targetID":68323},"68357":{"id":68357,"sourceID":68312,"targetID":68299},"68358":{"id":68358,"sourceID":68331,"targetID":68329},"68359":{"id":68359,"sourceID":68322,"targetID":68331},"68360":{"id":68360,"sourceID":68296,"targetID":68330},"68361":{"id":68361,"sourceID":68323,"targetID":68311},"68362":{"id":68362,"sourceID":68301,"targetID":68296},"68363":{"id":68363,"sourceID":68337,"targetID":68326},"68364":{"id":68364,"sourceID":68306,"targetID":68300},"68365":{"id":68365,"sourceID":68321,"targetID":68315},"68366":{"id":68366,"sourceID":68312,"targetID":68322},"68367":{"id":68367,"sourceID":68332,"targetID":68313},"68368":{"id":68368,"sourceID":68300,"targetID":68327},"68369":{"id":68369,"sourceID":68307,"targetID":68333},"68370":{"id":68370,"sourceID":68330,"targetID":68328},"68371":{"id":68371,"sourceID":68334,"targetID":68337},"68372":{"id":68372,"sourceID":68318,"targetID":68306},"68373":{"id":68373,"sourceID":68308,"targetID":68318},"68375":{"id":68375,"sourceID":68313,"targetID":68334}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{"68374":{"id":68374,"sourceID":68335,"targetID":68304},"68376":{"id":68376,"sourceID":68305,"targetID":68324},"68377":{"id":68377,"sourceID":68302,"targetID":68319}},"noteConnectors":{},"notes":{"68290":{"id":68290,"x":-460,"y":34,"width":480,"height":624,"text":"**GOOD USER** - Metadata management, S3 supporting actions, Matillion API","colour":"00ce4f"},"68291":{"id":68291,"x":-849,"y":-316,"width":350,"height":598,"text":"**MATILLION API**","colour":"f9c21b"},"68292":{"id":68292,"x":51,"y":365,"width":97,"height":69,"text":"**Multiple API responses --> Snowflake**","colour":"e6e63c"},"68293":{"id":68293,"x":-120,"y":470,"width":107,"height":52,"text":"**Save Files as Zip**","colour":"e6e63c"},"68294":{"id":68294,"x":-846,"y":310,"width":353,"height":197,"text":"**LMS**","colour":"e6e63c"},"68295":{"id":68295,"x":-456,"y":-314,"width":468,"height":323,"text":"**BAD USER** - Mass migration, transform on data in DataFrames","colour":"d60000"},"68297":{"id":68297,"x":-848,"y":613,"width":349,"height":194,"text":"**ETC**","colour":"d60000"}},"variables":{"catalogue":{"definition":{"name":"catalogue","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"cfb_year":{"definition":{"name":"cfb_year","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"2015"},"component":{"definition":{"name":"component","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"curr_file":{"definition":{"name":"curr_file","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"1987.csv.gz"},"duration":{"definition":{"name":"duration","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"ec2_pass":{"definition":{"name":"ec2_pass","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"i-034ed9405aec79eee"},"ec2_user":{"definition":{"name":"ec2_user","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"ec2-user"},"file":{"definition":{"name":"file","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"filename_arawan":{"definition":{"name":"filename_arawan","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"default"},"localdir":{"definition":{"name":"localdir","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"/tmp/"},"localdir_arawan":{"definition":{"name":"localdir_arawan","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"/tmp/"},"response":{"definition":{"name":"response","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"row_count":{"definition":{"name":"row_count","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"run_time":{"definition":{"name":"run_time","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"s3_bucket":{"definition":{"name":"s3_bucket","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"metl-flights-eu-west"},"s3_bucket_arawan":{"definition":{"name":"s3_bucket_arawan","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"mtln-arawan"},"s3_bucket_kg":{"definition":{"name":"s3_bucket_kg","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"mtln-kareyg"},"s3_bucket_pythonboto":{"definition":{"name":"s3_bucket_pythonboto","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"mtln-kareyg/python-boto"},"schema":{"definition":{"name":"schema","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"table":{"definition":{"name":"table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"type":{"definition":{"name":"type","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""}},"grids":{"api_response":{"definition":{"name":"api_response","scope":"TASKBATCH","definitions":[{"name":"VARIANT","type":"TEXT"}],"description":"","visibility":"PUBLIC"},"values":[]},"cfb_years":{"definition":{"name":"cfb_years","scope":"TASKBATCH","definitions":[{"name":"year","type":"TEXT"}],"description":"","visibility":"PUBLIC"},"values":[]},"file_table":{"definition":{"name":"file_table","scope":"BRANCH","definitions":[{"name":"file","type":"TEXT"},{"name":"table","type":"TEXT"}],"description":"","visibility":"PUBLIC"},"values":[{"values":["tgt_address","address"]},{"values":["tgt_product","product"]}]},"gv_TABLE_data":{"definition":{"name":"gv_TABLE_data","scope":"BRANCH","definitions":[{"name":"TABLE_NAME","type":"TEXT"},{"name":"TABLE_SCHEMA","type":"TEXT"},{"name":"TABLE_CATALOGUE","type":"TEXT"},{"name":"TABLE_TYPE","type":"TEXT"}],"description":"","visibility":"PUBLIC"},"values":[]}}},"info":{"name":"python_examples","description":"","type":"ORCHESTRATION","tag":"b798cbe5-f69c-41c2-83ad-5409d3471ee8"}}