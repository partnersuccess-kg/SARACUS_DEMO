{"job":{"components":{"68120":{"id":68120,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-30576616,"x":112,"y":-80,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Bash Script - Task History Since"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are exported into bash, but should be considered read-only: \n#    echo $myvar\n###\n\n# Cleanup existing Files\n#rm -f \"mtln_task_history_$jv_project_group_name-$jv_project_name.${jv_start}_${jv_end}.json\"\nrm -f mtln_task_history_$jv_project_group_name-$jv_project_name*\n\n# Matillion V1 API to get Task History Since a date\n#curl -o \"mtln_task_history_$project_group_name-$project_name.json\" -X GET -u ${jv_api_user/\\\\!/!}:${jv_api_pw/\\\\!/!} -H \"Content-Type: application/json\" \"http://127.0.0.1:8080/rest/v1/group/name/$jv_project_group_name/project/name/$jv_project_name/task/history?since=$jv_since\"\ncurl -o \"mtln_task_history_$jv_project_group_name-$jv_project_name.${jv_start}_${jv_end}.json\" -X GET -u ${jv_api_user/\\\\!/!}:${jv_api_pw/\\\\!/!} -H \"Content-Type: application/json\" \"http://127.0.0.1:8080/rest/v1/group/name/$jv_project_group_name/project/name/$jv_project_name/task/filter/by/start/range/date/$jv_start/time/00%3A00/to/date/$jv_end/time/00%3A00\"\n#curl -o \"mtln_task_history_$project_group_name-$project_name.json\" -X GET -u ${jv_api_user/\\\\!/!}:${jv_api_pw/\\\\!/!} -H \"Content-Type: application/json\" \"http://127.0.0.1:8080/rest/v1/group/name/$jv_project_group_name/project/name/$jv_project_name/task/filter/by/start/after/date/2019-06-01\"\n\n\n# Compress the file\ngzip \"mtln_task_history_$jv_project_group_name-$jv_project_name.${jv_start}_${jv_end}.json\"\n\n# Move the resulting output to an S3 Bucket\n#aws s3 mv \"mtln_task_history_$project_group_name-$project_name.${jv_start}_${jv_end}.json.gz\" s3://$jv_s3_bucket"}}}},"visible":true},"3":{"slot":3,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[68135]},"68121":{"id":68121,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-320,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[68132,68133],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68122":{"id":68122,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-30576616,"x":264,"y":-106,"width":32,"height":32,"inputConnectorIDs":[68129],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Bash Script 0"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are exported into bash, but should be considered read-only: \n#    echo $myvar\n###\n\n# Tar up the multiple files\ntar -czvf mtln_task_history_$jv_project_group_name-$jv_project_name.tar.gz mtln_task_history_$jv_project_group_name-$jv_project_name*.json.gz\n\n# Move the resulting output to an S3 Bucket\naws s3 mv \"mtln_task_history_$jv_project_group_name-$jv_project_name.tar.gz\" s3://$jv_s3_bucket\n\n# Cleanup existing Files\nrm -f mtln_task_history_$jv_project_group_name-$jv_project_name*\n"}}}},"visible":true},"3":{"slot":3,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68123":{"id":68123,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":1155583855,"x":-207,"y":-2,"width":32,"height":32,"inputConnectorIDs":[68133],"outputSuccessConnectorIDs":[68131],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Query Result To Grid 0"}}}},"visible":true},"2":{"slot":2,"name":"Basic/Advanced","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Advanced"}}}},"visible":true},"3":{"slot":3,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"4":{"slot":4,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"6":{"slot":6,"name":"Table Columns","elements":{},"visible":false},"7":{"slot":7,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"WITH CTE_MY_DATE AS (\n   SELECT DATEADD(DAY, SEQ4(), '${jv_start_date}') AS MY_DATE\n     FROM TABLE(GENERATOR(ROWCOUNT=>10)) -- Number of days after reference date in previous line\n )\n SELECT TO_DATE(MY_DATE) as START_DT,\n        TO_DATE(DATEADD(DAY,1,MY_DATE)) as END_DT\n   FROM CTE_MY_DATE"}}}},"visible":true},"8":{"slot":8,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"gv_dates"}}}},"visible":true},"9":{"slot":9,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"START_DT"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"END_DT"}}}},"visible":true},"10":{"slot":10,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":false},"11":{"slot":11,"name":"Order By","elements":{},"visible":false},"12":{"slot":12,"name":"Sort","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Ascending"}}}},"visible":false},"20":{"slot":20,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68124":{"id":68124,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"ITERATE","implementationID":-424773870,"x":112,"y":-112,"width":32,"height":16,"inputConnectorIDs":[68130],"outputSuccessConnectorIDs":[68129],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Grid Iterator 0"}}}},"visible":true},"3":{"slot":3,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"gv_dates"}}}},"visible":true},"4":{"slot":4,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"start_dt"},"2":{"slot":2,"type":"STRING","value":"jv_start"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"end_dt"},"2":{"slot":2,"type":"STRING","value":"jv_end"}}}},"visible":true},"5":{"slot":5,"name":"Break on Failure","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"No"}}}},"visible":true},"6":{"slot":6,"name":"Concurrency","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Sequential"}}}},"visible":true},"999":{"slot":999,"name":"Record Values In Task History","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Yes"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[68135],"inputIterationConnectorIDs":[]},"68125":{"id":68125,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-30576616,"x":-238,"y":-83,"width":32,"height":32,"inputConnectorIDs":[68132],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Bash Script 1"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are exported into bash, but should be considered read-only: \n#    echo $myvar\n###\n#rm -rf mtln_task_history_Demonstration*\n#rm mtln_task_history_Demonstration%20Projects-Arawan%20Gajajiva*\nls -trl"}}}},"visible":true},"3":{"slot":3,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68126":{"id":68126,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-30576616,"x":64,"y":32,"width":32,"height":32,"inputConnectorIDs":[68128],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Bash Script - Tasks Running"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are exported into bash, but should be considered read-only: \n#    echo $myvar\n###\n\nrm -f \"mtln_task_running_$project_group_name-$project_name.json\"\nrm -f \"mtln_task_running_$project_group_name-$project_name.json.gz\"\n\n# Matillion V1 API to get Running Tasks\ncurl -o \"mtln_task_running_$project_group_name-$project_name.json\" -X GET -u ${jv_api_user/\\\\!/!}:${jv_api_pw/\\\\!/!} -H \"Content-Type: application/json\" \"http://127.0.0.1:8080/rest/v1/group/name/$jv_project_group_name/project/name/$jv_project_name/task/running\"\n#curl -o \"mtln_task_running_$project_group_name-$project_name.json\" -X GET -u ${jv_api_user/\\\\!/!}:${jv_api_pw/\\\\!/!} -H \"Content-Type: application/json\" \"http://127.0.0.1:8080/rest/v1/group/name/$jv_project_group_name/project/name/$jv_project_name/task/running\"\n\n# Compress the file\ngzip \"mtln_task_running_$project_group_name-$project_name.json\"\n\n# Move the resulting output to an S3 Bucket\naws s3 mv \"mtln_task_running_$project_group_name-$project_name.json.gz\" s3://$jv_s3_bucket"}}}},"visible":true},"3":{"slot":3,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"68127":{"id":68127,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-64,"y":0,"width":32,"height":32,"inputConnectorIDs":[68131],"outputSuccessConnectorIDs":[68128,68130],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python Script 0"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\nimport urllib.parse\n\ncontext.updateVariable('jv_project_group_name',urllib.parse.quote(project_group_name))\ncontext.updateVariable('jv_project_name',urllib.parse.quote(project_name))\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"68128":{"id":68128,"sourceID":68127,"targetID":68126},"68129":{"id":68129,"sourceID":68124,"targetID":68122},"68130":{"id":68130,"sourceID":68127,"targetID":68124},"68131":{"id":68131,"sourceID":68123,"targetID":68127}},"failureConnectors":{},"unconditionalConnectors":{"68132":{"id":68132,"sourceID":68121,"targetID":68125},"68133":{"id":68133,"sourceID":68121,"targetID":68123}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{"68135":{"id":68135,"sourceID":68124,"targetID":68120}},"noteConnectors":{},"notes":{"68118":{"id":68118,"x":-746,"y":-159,"width":1103,"height":273,"text":"The purpose of this job is to fetch Task History Data from Matillion since a specified date and to fetch currently running Tasks\n\nUses the Matillion v1 API to fetch Task History and Task Running data.  \nUses command line to call Matillion API and store the response in a local file.\nNext, moves the local file to a specified S3 Bucket.\n\n**Note: Review and set the following Job Variables**\n\njv_s3_bucket --> S3 Bucket where Task History Data will be unloaded to\njv_api_user --> Matillion User that has API access\njv_api_pw --> Password for Matillion User that has API access \njv_since --> Date to fetch Task History since.  Format: yyyy-mm-dd","colour":"e6e63c"}},"variables":{"jv_api_pw":{"definition":{"name":"jv_api_pw","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"api-user"},"jv_api_user":{"definition":{"name":"jv_api_user","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"api-user"},"jv_end":{"definition":{"name":"jv_end","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"jv_project_group_name":{"definition":{"name":"jv_project_group_name","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"jv_project_name":{"definition":{"name":"jv_project_name","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"jv_s3_bucket":{"definition":{"name":"jv_s3_bucket","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"mtln-arawan"},"jv_since":{"definition":{"name":"jv_since","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"2019-10-13"},"jv_start":{"definition":{"name":"jv_start","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":null},"jv_start_date":{"definition":{"name":"jv_start_date","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"2019-06-19"}},"grids":{"gv_dates":{"definition":{"name":"gv_dates","scope":"BRANCH","definitions":[{"name":"start_dt","type":"TEXT"},{"name":"end_dt","type":"TEXT"}],"description":"","visibility":"PUBLIC"},"values":[{"values":["2019-01-01","2019-01-02"]}]}}},"info":{"name":"MatillionAPI-V1-UnloadTaskLogData-Bash","description":"","type":"ORCHESTRATION","tag":"1f4fa7d1-d965-46c7-b993-07a71757d425"}}